{"title":"使用husky和lint-staged来构建你的前端工作流","date":"2020-01-07T05:37:04.000Z","link":"20200107/使用husky和lint-staged来构建你的前端工作流","updated":"2020-01-08T13:14:56.000Z","content":"<h2 id=\"使用-husky-和-lint-staged-来构建你的前端工作流\">使用 husky 和 lint-staged 来构建你的前端工作流<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#使用-husky-和-lint-staged-来构建你的前端工作流\"></a></h2><p><code>git commit</code> 是最常用的命令之一，它可以触发四个 hook ，分别是 <code>pre-commit</code>, <code>prepare-commit-msg</code>, <code>commit-msg</code> 和 <code>post-commit</code>。 从字面上猜测着四个 hook 分别对应了 “commit 之前”，“准备 commit log message 的时候”，“生成 commit log message 的时候”，“commit 之后”四个阶段。</p>\n<h3 id=\"husky\">husky<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#husky\"></a></h3><p>git hook 中执行 node script</p>\n<h3 id=\"prettier\">prettier<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#prettier\"></a></h3><p>格式化代码</p>\n<p><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"noopener\">https://prettier.io/</a></p>\n<h3 id=\"eslint\">eslint<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#eslint\"></a></h3><p>es / ts 静态检验</p>\n<p><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">https://eslint.org/</a></p>\n<h3 id=\"Stylelint\">Stylelint<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#Stylelint\"></a></h3><p>css scss less 静态检验</p>\n<p><a href=\"https://stylelint.io/user-guide/rules/function-calc-no-invalid\" target=\"_blank\" rel=\"noopener\">https://stylelint.io/user-guide/rules/function-calc-no-invalid</a></p>\n<h3 id=\"lint-staged\">lint-staged<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#lint-staged\"></a></h3><p>文件过滤：一个仅仅过滤出Git代码暂存区文件(被committed的文件)的工具。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add --dev husky prettier eslint stylelint lint-staged</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"CRA-rewrite\">CRA rewrite<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#CRA-rewrite\"></a></h2><h3 id=\"customize-cra-react-app-rewired\">customize-cra / react-app-rewired<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#customize-cra-react-app-rewired\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add --dev customize-cra react-app-rewired</span><br></pre></td></tr></table></div></figure>\n\n<ul>\n<li>babel-plugin-import</li>\n<li>less less-loader</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add less less-loader babel-plugin-import --dev</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"oas-typegen-API-生成器\">oas-typegen API 生成器<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#oas-typegen-API-生成器\"></a></h2><h3 id=\"开发使用到的另外的库\">开发使用到的另外的库<a href=\"20200107/使用husky和lint-staged来构建你的前端工作流#开发使用到的另外的库\"></a></h3><p>big.js (数字精度计算)</p>\n<p>qr.js (生成二维码)</p>\n","prev":{"title":"前端随笔","link":"20200107/前端随笔"},"next":{"title":"前端架构思考随笔","link":"20200107/前端架构思考随笔"},"plink":"http://reamd7.github.io/20200107/使用husky和lint-staged来构建你的前端工作流/","toc":[{"title":"使用 husky 和 lint-staged 来构建你的前端工作流","id":"使用-husky-和-lint-staged-来构建你的前端工作流","index":"1","children":[{"title":"husky","id":"husky","index":"1.1"},{"title":"prettier","id":"prettier","index":"1.2"},{"title":"eslint","id":"eslint","index":"1.3"},{"title":"Stylelint","id":"Stylelint","index":"1.4"},{"title":"lint-staged","id":"lint-staged","index":"1.5"}]},{"title":"CRA rewrite","id":"CRA-rewrite","index":"2","children":[{"title":"customize-cra / react-app-rewired","id":"customize-cra-react-app-rewired","index":"2.1"}]},{"title":"oas-typegen API 生成器","id":"oas-typegen-API-生成器","index":"3","children":[{"title":"开发使用到的另外的库","id":"开发使用到的另外的库","index":"3.1"}]}]}