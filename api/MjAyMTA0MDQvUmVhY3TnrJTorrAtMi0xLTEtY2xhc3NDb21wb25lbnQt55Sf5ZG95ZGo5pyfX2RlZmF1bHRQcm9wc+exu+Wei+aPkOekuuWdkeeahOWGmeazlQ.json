{"title":"React笔记: 2.1.1 classComponent 生命周期 defaultProps类型提示坑的写法","date":"2021-04-04T12:34:36.000Z","date_formatted":{"ll":"2021年4月4日","L":"2021/04/04","MM-DD":"04-04"},"link":"20210404/React笔记-2-1-1-classComponent-生命周期_defaultProps类型提示坑的写法","tags":["React","React设计模式"],"updated":"2021-04-04T14:50:28.454Z","content":"<h2 id=\"defaultprops-下类型提示的写法：\">defaultProps 下类型提示的写法：<a title=\"#defaultprops-下类型提示的写法：\" href=\"#defaultprops-下类型提示的写法：\"></a></h2>\n<pre><code>// 重要核心 ！！ReactElement.js 中\n// // Resolve default props\n// if (type &amp;&amp; type.defaultProps) &#123;\n//   const defaultProps = type.defaultProps;\n//   for (propName in defaultProps) &#123;\n//     if (props[propName] === undefined) &#123; // 排除了undefined\n//       props[propName] = defaultProps[propName];\n//     &#125;\n//   &#125;\n// &#125;\n</code></pre>\n<blockquote>\n<p>原有的<code>defaultProps</code>的 typescript react 是边界情况有误的。<br>\nReactElement.js 中对 <code>defaultProps</code> 的处理情况中，不会处理undefined的值<br>\n所以在 typescript 中 如果在 defaultProps 中 有 undefined 的 值， 对应的字段名是不应该覆盖原有的Props 定义的。</p>\n</blockquote>\n<h2 id=\"原有的demo，也是错误的根源。\">原有的Demo，也是错误的根源。<a title=\"#原有的demo，也是错误的根源。\" href=\"#原有的demo，也是错误的根源。\"></a></h2>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestProps = &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  quiet?: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestState = &#123;</span><br><span class=\"line\">  updateString: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ComponentTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span>&lt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestProps</span>,</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestState</span></span></span><br><span class=\"line\"><span class=\"class\">&gt; </span>&#123;</span><br><span class=\"line\">  props: ComponentTestProps;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> defaultProps = &#123;</span><br><span class=\"line\">    test: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    quiet: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    name: <span class=\"literal\">undefined</span>, <span class=\"comment\">// 错误的根源</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    updateString: <span class=\"string\">&quot;hello world&quot;</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">props: ComponentTestProps</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.props = props;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ComponentTest</span> /&gt;</span></span>; <span class=\"comment\">// 这里不会 ts Error, 但是运行时会有 error ，如果没有处理name的情况而完全相信ts的情况下。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"思路1：借用-utility-types-的-一系列工具类型，以排除-undefined-类型\">思路1：借用 utility-types 的 一系列工具类型，以排除 undefined 类型<a title=\"#思路1：借用-utility-types-的-一系列工具类型，以排除-undefined-类型\" href=\"#思路1：借用-utility-types-的-一系列工具类型，以排除-undefined-类型\"></a></h2>\n<blockquote>\n<p><strong>但是这个只是第一层的思路，（既没有检查defaultProps，又不能抽象出ActiveProps 的泛型）。</strong></p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; OmitByValueExact, Assign &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;utility-types&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestProps = &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  quiet?: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestState = &#123;</span><br><span class=\"line\">  updateString: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ActiveProps = Assign&lt;</span><br><span class=\"line\">  Partial&lt;</span><br><span class=\"line\">    Pick&lt;</span><br><span class=\"line\">      ComponentTestProps,</span><br><span class=\"line\">      keyof OmitByValueExact&lt;<span class=\"keyword\">typeof</span> defaultProps, <span class=\"literal\">undefined</span>&gt;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &gt; &amp;</span><br><span class=\"line\">    Omit&lt;</span><br><span class=\"line\">      ComponentTestProps,</span><br><span class=\"line\">      keyof OmitByValueExact&lt;<span class=\"keyword\">typeof</span> defaultProps, <span class=\"literal\">undefined</span>&gt;</span><br><span class=\"line\">    &gt;,</span><br><span class=\"line\">  &#123;&#125;</span><br><span class=\"line\">&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> defaultProps = &#123;</span><br><span class=\"line\">  test: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  quiet: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  name: <span class=\"literal\">undefined</span>, <span class=\"comment\">// 这里有一个奇怪的ts问题，我并不知道ts做了什么进行对defaultProps的操作。但是显然与我ActiveProps的东西不一样的</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> ComponentTest = (<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span>&lt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestProps</span>,</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestState</span></span></span><br><span class=\"line\"><span class=\"class\">&gt; </span>&#123;</span><br><span class=\"line\">  props: ComponentTestProps;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> defaultProps = defaultProps;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    updateString: <span class=\"string\">&quot;hello world&quot;</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">props: ComponentTestProps</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.props = props;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">as</span> unknown) <span class=\"keyword\">as</span> React.ComponentClass&lt;ActiveProps, ComponentTestState&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ComponentTest</span> /&gt;</span></span>; <span class=\"comment\">// Error ! 类型 &quot;&#123;&#125;&quot; 中缺少属性 &quot;name&quot;，但类型 &quot;Readonly&lt;ActiveProps&gt;&quot; 中需要该属性。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"⭐改进思路2：检查defaultprops的类型，从而无所谓-undefined-类型了。\">⭐改进思路2：检查defaultProps的类型，从而无所谓 undefined 类型了。<a title=\"#⭐改进思路2：检查defaultprops的类型，从而无所谓-undefined-类型了。\" href=\"#⭐改进思路2：检查defaultprops的类型，从而无所谓-undefined-类型了。\"></a></h2>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 能够用泛型来构建出一个</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ActiveProps&lt;T, K <span class=\"keyword\">extends</span> keyof T&gt; = Partial&lt;Pick&lt;T, K&gt;&gt; &amp; Omit&lt;T, K&gt;;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这是 ComponentTest 实际的 Props</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestProps = &#123;</span><br><span class=\"line\">  test: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  quiet?: <span class=\"built_in\">boolean</span>;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  children?: React.ReactNode;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ComponentTestState = &#123;</span><br><span class=\"line\">  updateString: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> defaultProps = &#123;</span><br><span class=\"line\">  test: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  quiet: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">  name: <span class=\"string\">&quot;undefined&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> ComponentTest = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span>&lt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestProps</span>,</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"title\">ComponentTestState</span></span></span><br><span class=\"line\"><span class=\"class\">&gt; </span>&#123;</span><br><span class=\"line\">  props: ComponentTestProps;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> defaultProps: Pick&lt;</span><br><span class=\"line\">    ComponentTestProps,</span><br><span class=\"line\">    keyof <span class=\"keyword\">typeof</span> defaultProps</span><br><span class=\"line\">  &gt; = defaultProps; <span class=\"comment\">// 这里是重要的以进行 defaultProps 的类型限制，用这个操作 可以不需要用到检查 undefined 思路——只要保证defaultProps一定是Props的子类型即可</span></span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    updateString: <span class=\"string\">&quot;hello world&quot;</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">props: ComponentTestProps</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.props = props;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;span&gt;&#123;<span class=\"built_in\">this</span>.props.name&#125;&lt;/span&gt;</span><br><span class=\"line\">        &#123;<span class=\"built_in\">this</span>.props.children&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">as</span> React.ComponentClass&lt;</span><br><span class=\"line\">  ActiveProps&lt;ComponentTestProps, keyof <span class=\"keyword\">typeof</span> defaultProps&gt;,</span><br><span class=\"line\">  ComponentTestState</span><br><span class=\"line\">&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> ComponentTest;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","prev":{"title":"React笔记: 2.2 classComponent 生命周期——更新阶段","link":"20210404/React笔记-2-2-classComponent-生命周期——更新阶段"},"next":{"title":"React笔记: 2.1 classComponent 生命周期——挂载阶段","link":"20210326/React笔记-2-1-classComponent-生命周期——挂载阶段"},"plink":"https://xn--vqq264efum.com/20210404/React笔记-2-1-1-classComponent-生命周期_defaultProps类型提示坑的写法/","toc":[{"id":"defaultprops-下类型提示的写法：","title":"defaultProps 下类型提示的写法：","index":"1"},{"id":"原有的demo，也是错误的根源。","title":"原有的Demo，也是错误的根源。","index":"2"},{"id":"思路1：借用-utility-types-的-一系列工具类型，以排除-undefined-类型","title":"思路1：借用 utility-types 的 一系列工具类型，以排除 undefined 类型","index":"3"},{"id":"⭐改进思路2：检查defaultprops的类型，从而无所谓-undefined-类型了。","title":"⭐改进思路2：检查defaultProps的类型，从而无所谓 undefined 类型了。","index":"4"}],"reading_time":"725 字约 5 分钟"}